<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh-CN" /><updated>2021-12-03T12:16:01+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">孔令仁的博客</title><subtitle>孔令仁的个人博客页面~ 等我找个更好的说明词……目前文艺细胞匮乏中
</subtitle><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><entry><title type="html">博客搭建-新</title><link href="http://localhost:4000/2021/12/02/blog-set-up.html" rel="alternate" type="text/html" title="博客搭建-新" /><published>2021-12-02T00:00:00+00:00</published><updated>2021-12-02T00:00:00+00:00</updated><id>http://localhost:4000/2021/12/02/blog-set-up</id><content type="html" xml:base="http://localhost:4000/2021/12/02/blog-set-up.html">&lt;p&gt;如何通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github-pages&lt;/code&gt;搭建自己的个人博客&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;动机&quot;&gt;动机&lt;/h1&gt;

&lt;h1 id=&quot;工具&quot;&gt;工具&lt;/h1&gt;

&lt;h2 id=&quot;jekyll引擎&quot;&gt;jekyll引擎：&lt;/h2&gt;

&lt;h2 id=&quot;picgo图床结合阿里云&quot;&gt;PicGo图床结合阿里云&lt;/h2&gt;

&lt;p&gt;配置安装参考&lt;a href=&quot;https://zhuanlan.zhihu.com/p/104152479&quot;&gt;这个&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意记得设置公共读取权限~&lt;/p&gt;

&lt;p&gt;设置上传成功之后，就可以用链接访问了，这个是typora上传测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://klr-picgo.oss-cn-beijing.aliyuncs.com/img/typora-icon.png&quot; alt=&quot;typora测试icon&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;阿里云OSS有个小坑，链接访问是直接下载，不过在网站网页和typora都可以正常显示，所以问题不大。另外就是要注意，picgo上传可能会因为梯子或者短时间上传过多失败，一般等等就好了。&lt;/p&gt;

&lt;h2 id=&quot;typora&quot;&gt;Typora&lt;/h2&gt;

&lt;h1 id=&quot;一些配置调整&quot;&gt;一些配置调整&lt;/h1&gt;

&lt;p&gt;模板作者有很好的&lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/zh/quick-start&quot;&gt;中文&lt;/a&gt;和&lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/quick-start&quot;&gt;英文&lt;/a&gt;文档，因此操作是参照文档来调整的，这里主要是记录一下我的个性化方案。其他的还请自行参考文档。&lt;/p&gt;

&lt;p&gt;关于jekyll的高级参考（有点旧了）：https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&lt;/p&gt;

&lt;p&gt;github page支持的插件：https://pages.github.com/versions/&lt;/p&gt;

&lt;h2 id=&quot;安装模式&quot;&gt;安装模式&lt;/h2&gt;

&lt;p&gt;我选取的是主题安装，因此还需要手动从作者的模板页面获取部分文件。&lt;/p&gt;

&lt;p&gt;需要额外活动的内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;文件夹&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;主题选取&quot;&gt;主题选取&lt;/h2&gt;

&lt;p&gt;作者在&lt;code class=&quot;language-plaintext info highlighter-rouge&quot;&gt;_config.yaml&lt;/code&gt;中提供了多种颜色和代码高亮主题，我决定选取&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orange&lt;/code&gt;+&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tommorow&lt;/code&gt;，不过实际上能用的颜色皮肤主题并不是6个，因为在改变皮肤颜色时候，其他功能比如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{:.info}&lt;/code&gt;没有对应的配色变换，因此基准背景色只能在白色或者近似白色情况下才具有最好的效果。&lt;/p&gt;

&lt;h2 id=&quot;关于预览效果&quot;&gt;关于预览效果&lt;/h2&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext info highlighter-rouge&quot;&gt;index.html&lt;/code&gt;文件中，有选项控制预览显示，由于之前Hexo已经习惯了手动设置预览分栏线，因此沿袭过往的模式（另外确实&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text&lt;/code&gt;预览模式有点丑）&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;articles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;excerpt_type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;markdown增强&quot;&gt;markdown增强&lt;/h2&gt;

&lt;p&gt;markdown扩展语法也在&lt;code class=&quot;language-plaintext info highlighter-rouge&quot;&gt;_config.yaml&lt;/code&gt;中。由于typora也支持&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mathjax&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mermaid&lt;/code&gt;，所以我开启了这两个，没有开启chart。多两个插件，网速应该不是太大问题。&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;## Mathjax&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false (default), true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mathjax_autoNumber&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false (default), true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Mermaid&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mermaid&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false (default), true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Chart&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;chart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false (default), true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于数学公式，我平时用的typora偏好中，我没有勾选自动编号，因此在博客上面也默认不开启了。&lt;/p&gt;

&lt;p&gt;测试功能：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内联&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt;：$\alpha$&lt;/li&gt;
  &lt;li&gt;内联&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\( \\)&lt;/code&gt;:\( \beta\) 【typora不支持】&lt;/li&gt;
  &lt;li&gt;行间&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$$$&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;

\[\int_0^\infty x^{a-1}e^{-x}=\Gamma(a)\]

&lt;ul&gt;
  &lt;li&gt;行间&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\[\\]&lt;/code&gt;：【typora不支持】&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;\[
\int_0^\infty x^{a-1}e^{-x}=\Gamma(a)
\]&lt;/p&gt;

&lt;h2 id=&quot;logo&quot;&gt;logo&lt;/h2&gt;

&lt;p&gt;暂时没想好用什么……&lt;/p&gt;

&lt;h2 id=&quot;个性化页面-404&quot;&gt;个性化页面-404&lt;/h2&gt;

&lt;p&gt;放了一个我家的猫猫图，但是404页面不支持图片定义的圆角这些类，所以只能直接放了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/my-cat.jpg&quot; alt=&quot;猫猫图&quot; class=&quot;circle&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;创建新文章&quot;&gt;创建新文章&lt;/h2&gt;

&lt;p&gt;自己动手，丰衣足食，注意到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_template.md&lt;/code&gt;这种下划线开头不会被加载，我们可以直接做一个模板文件，然后利用复制的方式来生产新的文件。&lt;/p&gt;

&lt;p&gt;为了节约掉写日期的麻烦，所以写了个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create.bat&lt;/code&gt;文件：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;yyyy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%date:~,4%
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%date:~5,2%
&lt;span class=&quot;nb&quot;&gt;set dd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%date:~8,2%
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; /p &lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#接收标题名称&lt;/span&gt;
copy _template.md &lt;span class=&quot;s2&quot;&gt;&quot;%yyyy%-%mm%-%dd%-%title%.md&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="技术" /><category term="博客搭建" /><summary type="html">如何通过jekyll和github-pages搭建自己的个人博客</summary></entry><entry><title type="html">博客搭建(3)–数学渲染的坑</title><link href="http://localhost:4000/2020/05/03/blog-setup-old-3.html" rel="alternate" type="text/html" title="博客搭建(3)–数学渲染的坑" /><published>2020-05-03T00:00:00+00:00</published><updated>2020-05-03T00:00:00+00:00</updated><id>http://localhost:4000/2020/05/03/blog-setup-old-3</id><content type="html" xml:base="http://localhost:4000/2020/05/03/blog-setup-old-3.html">&lt;p&gt;【注：这是过去使用的github博客搭建方案，现在已经更换到jekyll】&lt;/p&gt;

&lt;p&gt;关于hexo数学加载的坑&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;hexo可以启用mathjax来渲染markdown里面的数学符号，但是它的引擎有点问题，会把&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_a_&lt;/code&gt;这种下划线包裹识别为斜体，导致数学公式里面出现符号&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;而故障，还有下划线有时候也会出现问题。&lt;/p&gt;

&lt;p&gt;为了解决这个问题，我参考了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://www.jianshu.com/p/c9beedaf08e4&lt;/code&gt;这篇文章，其中有手动修改原引擎正则表达式的方法，但是我的正则表达式和这个博客不一样，看的晕了 ，所以尝试了更换引擎的方法。&lt;/p&gt;

&lt;p&gt;在hexo项目的路径下面输入如下指令，成功更换了引擎&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm uninstall hexo-renderer-marked --save
npm install hexo-renderer-pandoc --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然而……数学公式还是不行（这次连generate指令都坏掉了，网上找不到这个问题的解决）&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error:
[ERROR][hexo-renderer-pandoc] pandoc exited with code null.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;于是卸载重新装hexo的原生数学：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install hexo-renderer-marked --save
npm uninstall hexo-renderer-pandoc --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后尝试手动修改正则表达式：&lt;/p&gt;

&lt;p&gt;位置node_modules\marked\lib\marked.js&lt;/p&gt;

&lt;p&gt;然后修改inline部分的正则表达式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个是em斜体：把用下划线匹配的表达式删去（不同版本表达式不一样，需要自己看）&lt;/li&gt;
  &lt;li&gt;另一个就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\&lt;/code&gt;的转义，需要修改escape那一项的正则表达式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样修改之后就可以成功加载出来了&lt;/p&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="博客搭建" /><category term="技术" /><summary type="html">【注：这是过去使用的github博客搭建方案，现在已经更换到jekyll】 关于hexo数学加载的坑</summary></entry><entry><title type="html">聊聊《小王子》中的国王</title><link href="http://localhost:4000/2019/11/23/little-prince.html" rel="alternate" type="text/html" title="聊聊《小王子》中的国王" /><published>2019-11-23T00:00:00+00:00</published><updated>2019-11-23T00:00:00+00:00</updated><id>http://localhost:4000/2019/11/23/little-prince</id><content type="html" xml:base="http://localhost:4000/2019/11/23/little-prince.html">&lt;p&gt;《小王子》真的是个宝藏，每次去读的时候都会结合自身产生新的感受。&lt;/p&gt;

&lt;p&gt;大概大部分人都会记得小王子的玫瑰或者他“驯养”的狐狸。而对来到地球之前遇到的几个“大人”，多半只是记得他们的抽象概念–讨厌的大人。但是，这些大人的意义真的那么简单普通吗？&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;就文本而言&quot;&gt;就文本而言&lt;/h2&gt;

&lt;p&gt;国王这个词大概是一个很特别的词汇，因为对于它的理解往往是基于一个时代的特点，如果这是一个中世纪的国王，那么他大概不会像书里面那样以可爱的方式去展现他的权威。（当然，作者说了，这是一个善良的国王）&lt;/p&gt;

&lt;p&gt;国王命令小王子“时而打哈欠，时而不打哈欠”，这个命令似乎和后面爱慕虚荣的人要求小王子鼓掌是有些类似的。那么为什么作者会去写一位国王，又写一位爱慕虚荣者呢？&lt;/p&gt;

&lt;p&gt;首先我们看一下两人的相似性：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;啊！来了一个臣民&lt;/p&gt;

  &lt;p&gt;一个崇拜我的人来拜访了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从某种角度来讲，这两个人的认知都是有些自我中心的（其实是因为作者塑造的孩子和“大人”的冲突就在于是否尊重和理解他人的心灵）但是，细细品味的话，似乎会发现，虚荣者是有些可憎的，而国王却是有些可怜的。&lt;/p&gt;

&lt;p&gt;他们因为一点本质的不同：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;向每个人提出的要求应该是他们所能做到的。权威首先应该建立在理性的基础上。&lt;/p&gt;

  &lt;p&gt;让我高兴吧，请你来钦佩我吧&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;虚荣者是纯粹的自我中心，然而国王呢？他的存在要求他坐在王位上，恰当的行使自己的权威，来完成“统治一切”的自身定位。从某种角度来说，其实他是痛苦的，因为他的理性已经告知他，他不能命令星辰的起落；而小王子的到来更是让他的感性也意识到，他也不能操纵他人的行为，即使他是善良和善的，即使他表示出对他人的需要。&lt;/p&gt;

&lt;p&gt;说句心里话，我觉得小王子耿直离去其实是不对的，他至少应该主动去提出要当国王的大使，让国王觉得自己是被认可和理解的。&lt;/p&gt;

&lt;h2 id=&quot;泛化&quot;&gt;泛化&lt;/h2&gt;

&lt;p&gt;为什么我会突然讨论国王这个人物呢？因为我有时候会觉得，国王是一个隐喻，他所指代的是，所有被定在某个位置上，需要他人协助来实现价值的人。当他善良和理性的时候，其实他才是最痛苦和悲惨的人，因为无论如何，“臣民”的利益和“国王”的利益是不会相同的。因此，善良只会让他觉得“万方有罪，罪在朕躬”，将原因归结在自己身上。他理解了“臣民”的意愿，可是“臣民”却没有理解他的意愿。&lt;/p&gt;

&lt;p&gt;那么，一个“国王”该怎么样才会快乐呢？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;他可以成为“暴君”，不去关注他人的意志，强行驱使他们去实现自己的目标与价值&lt;/li&gt;
  &lt;li&gt;或者他可以放弃“国王”的标签，承认他人的不配合是他人的问题，团队的失败是团队的问题而非他的过错&lt;/li&gt;
&lt;/ul&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="杂感" /><category term="随笔" /><summary type="html">《小王子》真的是个宝藏，每次去读的时候都会结合自身产生新的感受。 大概大部分人都会记得小王子的玫瑰或者他“驯养”的狐狸。而对来到地球之前遇到的几个“大人”，多半只是记得他们的抽象概念–讨厌的大人。但是，这些大人的意义真的那么简单普通吗？</summary></entry><entry><title type="html">在有C语言基础的情况下理解Python</title><link href="http://localhost:4000/2019/11/10/from-c-to-python.html" rel="alternate" type="text/html" title="在有C语言基础的情况下理解Python" /><published>2019-11-10T00:00:00+00:00</published><updated>2019-11-10T00:00:00+00:00</updated><id>http://localhost:4000/2019/11/10/from-c-to-python</id><content type="html" xml:base="http://localhost:4000/2019/11/10/from-c-to-python.html">&lt;p&gt;如何在有C语言基础的情况下理解Python&lt;/p&gt;

&lt;p&gt;假设C语言基础是采用《C程序设计（第四版）》 谭浩强&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;概念比较&quot;&gt;概念比较&lt;/h1&gt;

&lt;p&gt;学完C一年之后再去翻C语言的基础书，才发现似乎书上真的没有讲什么……&lt;/p&gt;

&lt;p&gt;目录：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;程序设计和C语言&lt;/li&gt;
  &lt;li&gt;算法——程序的灵魂&lt;/li&gt;
  &lt;li&gt;简单的C程序设计——顺序程序设计&lt;/li&gt;
  &lt;li&gt;选择结构程序设计&lt;/li&gt;
  &lt;li&gt;循环结构程序设计&lt;/li&gt;
  &lt;li&gt;利用数组处理批量数据&lt;/li&gt;
  &lt;li&gt;用函数实现模块化程序设计&lt;/li&gt;
  &lt;li&gt;善于利用指针&lt;/li&gt;
  &lt;li&gt;用户自己建立数据类型&lt;/li&gt;
  &lt;li&gt;对文件的输入输出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对应的内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/10/from-c-to-python/#语言特性&quot;&gt;脚本语言、面向对象&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/10/from-c-to-python/#算法&quot;&gt;算法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/10/from-c-to-python/#选择与循环&quot;&gt;Python的选择与循环&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Python的内置数据类型【可以看菜鸟教程或者官方文档等】&lt;/li&gt;
  &lt;li&gt;Python函数【可以看菜鸟教程或者官方文档等】&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/10/from-c-to-python/#C的指针与Python变量&quot;&gt;没有指针，但是有类似的逻辑&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Python的类【可以看菜鸟教程或者官方文档等】&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/10/from-c-to-python/#文件、输入输出、路径&quot;&gt;文件、输入输出、路径&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;语言特性&quot;&gt;语言特性&lt;/h2&gt;

&lt;p&gt;对于Python最深刻的理解莫过于这个了：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;this&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.可读性很重要！
Special cases aren&apos;t special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you&apos;re Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it&apos;s a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let&apos;s do more of those!
&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Python的语言特性很多，如果说和C对比的话，最大的区别是三点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;脚本语言&lt;/li&gt;
  &lt;li&gt;动态类型&lt;/li&gt;
  &lt;li&gt;面向对象&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;脚本语言&quot;&gt;脚本语言&lt;/h3&gt;

&lt;p&gt;脚本语言不需要编译，可以直接用，由解释器来负责解释&lt;/p&gt;

&lt;p&gt;所以说相比于C，你不需要进行编译，也不因为编译失败而心态爆炸&lt;/p&gt;

&lt;p&gt;使用解释器，意味着你可以运行你代码的部分，即使后面还没有写完（但是这不代表你可以跳过使用某个变量的语句直接运行后面的语句）&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;变量赋值&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果你上来就&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run cell(Spyder的一个按钮，可以运行选定部分)&lt;/code&gt;，那就会&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NameError: name &apos;var&apos; is not defined&lt;/code&gt;，提示你没有定义变量&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果你运行整个程序，那么就会输出1（动态类型后面再说）&lt;/p&gt;

&lt;p&gt;如果你先运行第一句，然后跳过第二个，单独运行第三句，那么就会输出&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;变量赋值&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;脚本语言使得写代码时，能够人机即时交互，但是代价是解释器会存下太多东西，速度和内存管理不太行（但是我们暂时不必在意这点）&lt;/p&gt;

&lt;h3 id=&quot;动态变量&quot;&gt;动态变量&lt;/h3&gt;

&lt;p&gt;相比于C，动态变量这件事可以说是喜忧参半。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;忧在没有人管你的变量操作了，没有严格定义的变量有时候会出问题&lt;/li&gt;
  &lt;li&gt;喜在你不需要具体的一个个定义变量，只需要写出变量名赋值即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;严格来讲，动态变量类型不代表你就可以随便更改变量的类型。因为变量的数据类型不定，所以你可能会搞出一些迷惑操作，尤其Python特别擅长重载各种操作，所以你并不会因为错误的数据类型而得到Error：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;请输入一个数字a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;请输入一个数字b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a+b的结果是：&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#请输入一个数字a:1
#请输入一个数字b:2
#a+b的结果是： 12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a+b&lt;/code&gt;看起来很正常，然而input输进去的是字符串，所以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt;是字符串的连接方法，你得到的是两个字符直接相连，而不是数字加法。&lt;/p&gt;

&lt;p&gt;因此最好不要用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;这种看起来就像循环变量的东西来存字符串，会让其他人懵的&lt;/p&gt;

&lt;h3 id=&quot;面向对象&quot;&gt;面向对象&lt;/h3&gt;

&lt;p&gt;【致某些同学（包含我自己）：面向对象编程不要求你先找个对象】&lt;/p&gt;

&lt;p&gt;面向对象是相对于面向过程来讲的，面向对象方法，把相关的数据和方法组织为一个整体来看待，从更高的层次来进行系统建模，更贴近事物的自然运行模式。&lt;/p&gt;

&lt;p&gt;简而言之：之前写个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt;函数，现在要写&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class xxx&lt;/code&gt;，函数还是要写，但是一般组织在一个类里面&lt;/p&gt;

&lt;p&gt;如果你对面向对象暂时不太了解，也可以继续使用C的面向过程编程，继续写函数。&lt;/p&gt;

&lt;p&gt;下面是个简单的例子，看不懂也不要太担心（因为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self&lt;/code&gt;这种东西就是个符号而已）&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;学Python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;klr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;klr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;klr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;klr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;好好学习&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;算法&quot;&gt;算法&lt;/h2&gt;

&lt;p&gt;算法在每种语言都是相同的，但是在Python做程序练习的时候，你可以总找到捷径&lt;/p&gt;

&lt;p&gt;比如说处理重复数据的时候，可以用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&lt;/code&gt;直接搞定：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;listRaw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listRaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# [1, 2, 3, 5]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;【这就是为啥Python相关广告都有“X行代码搞定”的标题】&lt;/p&gt;

&lt;h2 id=&quot;选择与循环&quot;&gt;选择与循环&lt;/h2&gt;

&lt;p&gt;参考&lt;a href=&quot;https://www.runoob.com/python3/python3-conditional-statements.html&quot;&gt;菜鸟教程&lt;/a&gt;可以了解基本的Python分支和循环语句&lt;/p&gt;

&lt;p&gt;相比于C语言，可能更需要注意的是，Python对于循环的彻底认知是比较有难度的（这要感谢Python基本数据的特性）&lt;/p&gt;

&lt;p&gt;最明显的一点是，当我们使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt;循环，会发现这个句子并不是简单的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i++&lt;/code&gt;逻辑（当然你可以用while来做，那么就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i++&lt;/code&gt;的方式了）&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们发现Python的for语句和C最根本的不同在于，C语言的while和for本质上差不多，可以互相改写，但是Python的for使用了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in&lt;/code&gt;这个符号。&lt;/p&gt;

&lt;p&gt;深入讲解这个问题需要涉及到迭代器、生成器，我们暂时不讲那么深，只是提出来：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;range可以当做C语言循环的模式来理解，但是实质不同&lt;/li&gt;
  &lt;li&gt;in还可以用在其他东西上，逐个遍历，比如字符串、列表、元组（他们统称可迭代对象）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;c的指针与python变量&quot;&gt;C的指针与Python变量&lt;/h2&gt;

&lt;p&gt;相信大家在学习C的时候老师都会强调C的重要性，其中比较常被强调的一点就是指针可以锻炼思维和节省空间。&lt;/p&gt;

&lt;p&gt;相信大家都知道Python是没有指针的，有的同学也为此松了一口气，但是……不幸的是，如果你在学C的时候没学明白指针，那么接下来的部分还是会让你感到迷惑。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#列表生成式可以先不必理解
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;为什么会这样&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# a: [1, 4, 7, 10, 13] b: [1, 4, 7, 10, 13]
# a: [1, 4, &apos;为什么会这样&apos;, 10, 13] b: [1, 4, &apos;为什么会这样&apos;, 10, 13]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对比一下C语言什么时候会发生类似情况：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:%d,%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:%d,%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也就是说，如果你的变量是数、元组这种不可以更改的对象，那么万事大吉，可以直接用赋值。但是如果使用的是可变对象，比如列表，那么其实当你把一个变量赋值给另一个变量的时候，你其实是在类似于复制一个指针，并没有复制数据。&lt;/p&gt;

&lt;p&gt;如果从一个比较Python的方式来理解，一般是说，变量名是“一个贴纸”，而数据是格子，格子可以任意贴贴纸。仅仅是为了方便你理解和称呼某个数据，而解释器会根据你的变量对应的位置去找数据，这个过程任何语言都一样。&lt;/p&gt;

&lt;p&gt;因此Python的变量可以贴来贴去，也可以一堆标签贴在同一个格子（赋值时候发生的事情就是这个）。&lt;/p&gt;

&lt;p&gt;那么怎么处理这个问题呢？我们就需要引入两个函数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy()和deepcopy()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy()&lt;/code&gt;是内置功能（其实是类的方法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__copy__(self)&lt;/code&gt;），不需要调用包&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#这是一个基本的内置方法，不需要调包
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;为什么会这样&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#a: [1, 4, 7, 10, 13] b: [1, 4, 7, 10, 13]
#a: [1, 4, &apos;为什么会这样&apos;, 10, 13] b: [1, 4, 7, 10, 13]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是有时候仅仅是copy还不够用：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;啊！&quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#在列表里面的列表被复制的时候简单的把列表的位置复制了，所以a和b虽然不同，但是他们含有同一个列表
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;为什么会这样&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#a: [1, 2, [&apos;啊！&apos;]] b: [1, 2, [&apos;啊！&apos;]]
#a: [1, &apos;为什么会这样&apos;, [&apos;啊！&apos;]] b: [1, 2, [&apos;啊！&apos;]]
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#处理方式：
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;copy&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deepcopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;啊！&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;为什么会这样&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#a: [1, 2, [&apos;啊！&apos;]] b: [1, 2, [1]]
#a: [1, &apos;为什么会这样&apos;, [&apos;啊！&apos;]] b: [1, 2, [1]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;文件输入输出路径&quot;&gt;文件、输入输出、路径&lt;/h2&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-inputoutput.html&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;官方文档（建议英语水平要够）&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;仅仅使用open函数：https://docs.python.org/3/library/functions.html#open&lt;/li&gt;
      &lt;li&gt;路径操作：https://docs.python.org/3/library/os.path.html#module-os.path&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pathlib：&lt;/p&gt;

    &lt;p&gt;https://docs.python.org/3/library/pathlib.html&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0428/#abstract&quot;&gt;PEP428&lt;/a&gt;提出了建议，将pathlib这个对象式的第三方库加入到标准库之中&lt;/li&gt;
      &lt;li&gt;从Python 3.6开始，pathlib模块在整个标准库中得到支持&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pickle模块&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;input函数&quot;&gt;input函数：&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy.random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iterCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;猜数游戏，这个数字a可以取从{0}到{1}:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;iterCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;恭喜猜对啦！&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;字符串格式化输出&quot;&gt;字符串格式化输出：&lt;/h3&gt;

&lt;p&gt;Python尽管有着十分友好的输出语法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;，但是有些时候还是需要格式化输出字符串的功能。&lt;/p&gt;

&lt;p&gt;在Python中主要有四种格式化字符串的方法：&lt;/p&gt;

&lt;p&gt;第一种是类似于C的方法，在旧Python2中常用&lt;/p&gt;

&lt;p&gt;注意和C的区别在于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;后面只接受单一参数，多个输入要用元组打包。如果担心参数太多容易乱，可以使用关键字和字典&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;李狗蛋&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;我的名字是%s&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#在字符后面接上%，这个整体是一个格式化字符串，不一定要print出来
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;我的名字是%s&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;格式化作用于字符串而不是print:&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;我的名字是%s，我的年龄是%d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#元组打包格式化
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;我的名字是%(na)s，我的年龄是%(ag)d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;ag&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;na&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#注意前面是（）括号，后面字典才是{}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第二种是Python3字符串方法&lt;/p&gt;

&lt;p&gt;这是通过为字符串对象内置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.format&lt;/code&gt;方法实现的&lt;/p&gt;

&lt;p&gt;可以用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help(&quot; &quot;.format)/help(str.format)&lt;/code&gt;直接看函数简介&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt;整体的文档在https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str&lt;/li&gt;
  &lt;li&gt;格式化字符串的网址在https://docs.python.org/3/library/string.html#formatstrings&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;count {0} {1} {2}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# format()内的东西采用逗号分隔，相当于作为一个元组输入，而前面{}里面的序号对应元组的位序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;count {} {} {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 不写就按默认顺序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{0[1]} {1.__doc__}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lower&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#输入数据对象可以再进行.(调用属性)或者[]操作
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# *对可迭代对象的解包 https://www.python.org/dev/peps/pep-3132/
&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
python的len函数是一个很有用的函数，对字符也有多个功能
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;中文字符串的len😀&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;中文英文都是按一个字计算的&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#10
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;utf-8&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;中文6*3+英文3*1+1*4=25（英文不会被转换为utf8代码）&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
字符串对象有几个比较重要的内置方法
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;I love programming&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# &apos;I Love Programming&apos;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# &apos;i love programming&apos;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# &apos;I LOVE PROGRAMMING&apos;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第三种方式：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-string&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;f字符串这个思路比较清奇，因为他不需要你去安排数据是啥这个问题（前面两种都需要把数据写在某些位置），你只要写变量名就可以自动让Python帮你找需要替换什么。&lt;/p&gt;

&lt;p&gt;P.S.这个思路有点像Django框架对于变量的替换&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;找&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;我&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;你猜接下来输出是？&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#你猜接下来输出是？我
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第四个方式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string.Template.substitute&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用有点复杂，但是好处是可以封装特点的替换方式&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;demoTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#创建一个实例tmp
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;myTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;斐波那契数列第${a}项：${b}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;feb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;substitute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#给相应的key（键）赋值，返回格式化的字符串
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;demoTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#运行
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;如何写注释&quot;&gt;如何写注释&lt;/h2&gt;

&lt;p&gt;一个比较好的代码是需要有注释的，而且Python有个很强大的功能是可以自动为你生成用户文档，只需要用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt;函数即可&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    展现如何给自己的代码留下可以方便重用的注释
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;demoPrint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;默认打印这个&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        一个展示打印用的函数
        按照定义要求inputVal输入的是str，并且返回None
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;__main__&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;howToWriteNote&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;howToWriteNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demoPrint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demoPrint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;输出指定内容&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demoPrint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;注意到输入并不符合定义式也可以运行&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="Python" /><category term="学习" /><summary type="html">如何在有C语言基础的情况下理解Python 假设C语言基础是采用《C程序设计（第四版）》 谭浩强</summary></entry><entry><title type="html">博客搭建(2)</title><link href="http://localhost:4000/2019/11/09/blog-set-up-old-2.html" rel="alternate" type="text/html" title="博客搭建(2)" /><published>2019-11-09T00:00:00+00:00</published><updated>2019-11-09T00:00:00+00:00</updated><id>http://localhost:4000/2019/11/09/blog-set-up-old-2</id><content type="html" xml:base="http://localhost:4000/2019/11/09/blog-set-up-old-2.html">&lt;p&gt;【注：这是过去使用的github博客搭建方案，现在已经更换到jekyll】&lt;/p&gt;

&lt;p&gt;本篇涉及HEXO的基本指令以及如何配置一个主题（以NEXT为例）&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;hexo基本指令&quot;&gt;HEXO基本指令&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo server/s 运行服务器
hexo generate/g 生成
hexo g -d 生成并部署
hexo deploy/d 部署到服务器
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;主题配置&quot;&gt;主题配置&lt;/h1&gt;

&lt;p&gt;本文采用的是NEXT主题，但是主题的基本配置是相同的&lt;/p&gt;

&lt;p&gt;最全配置可以看&lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html&quot;&gt;这个&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在配置之前先看一下目录（有两个文件被隐藏–&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.deploy_git .gitignore&lt;/code&gt;）：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dir
&lt;/span&gt;_config.yml  node_modules  package-lock.json  scaffolds  themes
db.json      package.json  public             &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;里面的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.json&lt;/code&gt;文件是一些配置，初级操作用不到&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;文件夹是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node.js&lt;/code&gt;的一些内容，初级操作也用不到&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public .deploy_git&lt;/code&gt;文件夹是已经生成好的HTML，是用来预览/部署到服务器的&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source&lt;/code&gt;是存放创建的markdown的文件夹，下面含有2+n个文件夹&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;_drafts：草稿箱&lt;/li&gt;
  &lt;li&gt;_posts：博客帖子&lt;/li&gt;
  &lt;li&gt;其他文件夹–通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hexo new page &quot;页面名&quot;&lt;/code&gt;来创建&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scaffolds&lt;/code&gt;是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hexo new&lt;/code&gt;指令创建新md文件时候的模板所在位置，包含：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;draft草稿：不会发布在正式博客的内容（但是可以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hexo s -d&lt;/code&gt;本地查看草稿）&lt;/li&gt;
  &lt;li&gt;page页面：用于创建一些额外的页面，比如说tags标签页&lt;/li&gt;
  &lt;li&gt;post日志：最常用的，也是默认的类型，代表一篇博客&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lingrenkong.github.io/2019/11/09/blog-setup-2/#我的scaffolds配置&quot;&gt;我的scaffolds配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;我的scaffolds配置&quot;&gt;我的scaffolds配置&lt;/h2&gt;

&lt;p&gt;这个配置实际上是写一个md文件，之后指令生成的文件以它为基础（并且加上变量替换）&lt;/p&gt;

&lt;p&gt;三横里面的是yaml，外面的是HTML/markdown内容&lt;/p&gt;

&lt;p&gt;post：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;双括号代表变量替换，title是创建指令给出的名字&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;date是系统自动的创建时间&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 配置数学公式渲染为false，如果需要再自己改成true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;标签，可以有多个，采用列表的形式&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;分类具有顺序性和层次性&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&amp;lt;!--more--&amp;gt; 这个是hexo体系的助记符，在主页只显示到more之前&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;draft：&lt;/p&gt;

&lt;p&gt;唯一区别是草稿没有创建日期（反正草稿发布是按照发布时间）&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;mathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;page：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;某个类别&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;type不存在于默认的模板，添加type才会让page被识别为主题设定的东西&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="技术" /><category term="博客搭建" /><summary type="html">【注：这是过去使用的github博客搭建方案，现在已经更换到jekyll】 本篇涉及HEXO的基本指令以及如何配置一个主题（以NEXT为例）</summary></entry><entry><title type="html">网页制作迷惑行为大赏</title><link href="http://localhost:4000/2019/10/22/common-web-mistakes.html" rel="alternate" type="text/html" title="网页制作迷惑行为大赏" /><published>2019-10-22T00:00:00+00:00</published><updated>2019-10-22T00:00:00+00:00</updated><id>http://localhost:4000/2019/10/22/common-web-mistakes</id><content type="html" xml:base="http://localhost:4000/2019/10/22/common-web-mistakes.html">&lt;p&gt;摘要&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;很多人都说网页制作比其他程序容易，然而网页制作一样有很多大坑。以下是我和我认识的人遇到过的奇怪坑。&lt;/p&gt;

&lt;h1 id=&quot;html&quot;&gt;HTML&lt;/h1&gt;

&lt;h2 id=&quot;错拼标签&quot;&gt;错拼标签&lt;/h2&gt;

&lt;h3 id=&quot;href&quot;&gt;href&lt;/h3&gt;

&lt;p&gt;都说写HTML和写文字差不多，然而乱七八糟标签总会让人在一开始迷了眼。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https:\\www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;链接到百度&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--这个是有效的--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;链接到百度&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--是个链接，但是进入的是当前页面下的目录--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;herf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https:\\www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;链接到百度&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--看起来非常正常，但是点不开，拼写错了href--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.baidu.com/&quot;&gt;链接到百度&lt;/a&gt;
&lt;a href=&quot;https://lingrenkong.github.io/2019/10/22/common-mistakes-for-web/www.baidu.com&quot;&gt;链接到百度&lt;/a&gt;
链接到百度&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext info highlighter-rouge&quot;&gt;by森鸾&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;method-no-r&quot;&gt;method-no-r&lt;/h3&gt;

&lt;p&gt;类似的还有似懂非懂的英文理解，比如说&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;button method=&quot;post&quot;&amp;gt;按钮&amp;lt;/button&amp;gt;&lt;/code&gt;按钮，如果拼写成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;methord&lt;/code&gt;就尴尬了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext info highlighter-rouge&quot;&gt;by我&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;感谢列表&quot;&gt;感谢列表&lt;/h1&gt;

&lt;p&gt;森鸾&lt;/p&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="HTML" /><category term="学习" /><summary type="html">摘要</summary></entry><entry><title type="html">python重要操作速查表</title><link href="http://localhost:4000/2019/09/04/python-collection.html" rel="alternate" type="text/html" title="python重要操作速查表" /><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><id>http://localhost:4000/2019/09/04/python-collection</id><content type="html" xml:base="http://localhost:4000/2019/09/04/python-collection.html">&lt;p&gt;这是一些Python的重要操作&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;数据表批处理操作：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# data is a dataFrame/ndarray
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#change all the 0 into 1
# note: data==0 is a boolen array,which canbe used as index
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#这个知识点在于np支持批量运算+数组索引
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="Python" /><category term="学习" /><summary type="html">这是一些Python的重要操作</summary></entry><entry><title type="html">Python语法妙处(3)</title><link href="http://localhost:4000/2019/08/14/python-trick.html" rel="alternate" type="text/html" title="Python语法妙处(3)" /><published>2019-08-14T00:00:00+00:00</published><updated>2019-08-14T00:00:00+00:00</updated><id>http://localhost:4000/2019/08/14/python-trick</id><content type="html" xml:base="http://localhost:4000/2019/08/14/python-trick.html">&lt;p&gt;语法和语言的一些细节是有深意的&lt;/p&gt;

&lt;p&gt;有时是善意，有时是恶意&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;短路的逻辑运算符&quot;&gt;短路的逻辑运算符&lt;/h1&gt;

&lt;p&gt;当时学C的时候一直没弄明白逻辑运算符的短路有什么意义，这次在Python中终于了解到了。&lt;/p&gt;

&lt;p&gt;曾经以为逻辑运算符的短路是用来出选择填空题的坑，直到看见这个例子才发现短路的真正意义。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是一个简单的循环，用while而不是for，因此很容易出现下标越界。&lt;/p&gt;

&lt;p&gt;由于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;and&lt;/code&gt;运算符有短路（如果&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a and b&lt;/code&gt;中的a为假，可以不运行b），因此&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data[len(data)]&lt;/code&gt;这个越界情况不会出现。而如果交换两个条件，就会下标越界了。&lt;/p&gt;

&lt;h1 id=&quot;玄学的全局变量&quot;&gt;玄学的全局变量&lt;/h1&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 2
# 5
# 7
# 8 注意这个8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Python一个比较糟糕的问题是标签只要出现过就一直存在&lt;/p&gt;

&lt;p&gt;因此循环变量最好不要和其他变量用类似的名字，不然会有不知道从哪里来的数据&lt;/p&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="Python" /><category term="学习" /><summary type="html">语法和语言的一些细节是有深意的 有时是善意，有时是恶意</summary></entry><entry><title type="html">摄影技术（1）-图片资源</title><link href="http://localhost:4000/2019/07/31/photography-skill.html" rel="alternate" type="text/html" title="摄影技术（1）-图片资源" /><published>2019-07-31T00:00:00+00:00</published><updated>2019-07-31T00:00:00+00:00</updated><id>http://localhost:4000/2019/07/31/photography-skill</id><content type="html" xml:base="http://localhost:4000/2019/07/31/photography-skill.html">&lt;p&gt;图到用时方恨少，这里有一些高清公开版权的图片网站链接与介绍&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;cc0版权&quot;&gt;&lt;a href=&quot;https://creativecommons.org/licenses/?lang=zh&quot;&gt;CC0版权&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;CC0是一种版权共享协议。创作者（设计师，摄影师等）自己把作品的版权共享给世界，不再持有版权，包括署名权，全世界范围内可以任意商用。唯一可能出问题的要求是，不得暗示作者认可你。&lt;/p&gt;

&lt;h3 id=&quot;colorhub-寻找你想要的色彩&quot;&gt;ColorHub-寻找你想要的色彩&lt;/h3&gt;

&lt;p&gt;可按&lt;strong&gt;中文关键词&lt;/strong&gt;检索，还可以按&lt;strong&gt;颜色&lt;/strong&gt;进行检索。&lt;/p&gt;

&lt;p&gt;缺点是收费（一次最低充值10元-10,000张），允许试用下载两张。&lt;/p&gt;

&lt;p&gt;网址：&lt;a href=&quot;https://colorhub.me/&quot;&gt;https://colorhub.me&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;泼辣有图-初学者的指导&quot;&gt;泼辣有图-初学者的指导&lt;/h3&gt;

&lt;p&gt;免费开源摄影分享网站，全部图片采用CC0版权，且&lt;strong&gt;每周展示10张用户投票数最高的图片&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;图片数量虽然并不是很多，但提供&lt;strong&gt;照片参数&lt;/strong&gt;和&lt;strong&gt;图片故事&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;网址：http://www.polayoutu.com/&lt;/p&gt;

&lt;h3 id=&quot;gratisography-趣味图片&quot;&gt;gratisography-趣味图片&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;无厘头、古怪的创意图片&lt;/strong&gt;为主，里面的兔子图特别好看。&lt;/p&gt;

&lt;p&gt;网址：&lt;a href=&quot;https://gratisography.com/&quot;&gt;https://gratisography.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;foodiefeed-美食图片&quot;&gt;foodiefeed-美食图片&lt;/h3&gt;

&lt;p&gt;分享各类&lt;strong&gt;美食图片&lt;/strong&gt;的网站，尤其是西式餐点摆盘。&lt;/p&gt;

&lt;p&gt;网址：&lt;a href=&quot;https://www.foodiesfeed.com/&quot;&gt;https://www.foodiesfeed.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://klr-picgo.oss-cn-beijing.aliyuncs.com/img/foodiesfeed.com_coffee-beans-on-a-book.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;unsplash&quot;&gt;Unsplash&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;累计超过 40+ 万张&lt;/strong&gt;可以免费使用。&lt;/p&gt;

&lt;p&gt;除网站外， 其还&lt;strong&gt;推出了多个平台的客户端&lt;/strong&gt;，包括 macOS 、 Android 、 iOS ，有很好的分类和检索功能 。&lt;/p&gt;

&lt;p&gt;最厉害的是这个网站提供API！！！&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;https://unsplash.com/documentation&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;网址: https://unsplash.com/&lt;/p&gt;

&lt;h3 id=&quot;pixabay&quot;&gt;pixabay&lt;/h3&gt;

&lt;p&gt;全球知名的免费图片网站，包括&lt;strong&gt;照片、插画、矢量图、视频&lt;/strong&gt;等等。拥有将近一百多万张图片素材，&lt;strong&gt;图片下载时可选择多种分辨率&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;网址：https://pixabay.com/&lt;/p&gt;

&lt;h3 id=&quot;hippopx&quot;&gt;Hippopx&lt;/h3&gt;

&lt;p&gt;图片质量数量比较好，但是没有主打特色。&lt;/p&gt;

&lt;p&gt;网址：https://www.hippopx.com/&lt;/p&gt;

&lt;h3 id=&quot;pexels&quot;&gt;pexels&lt;/h3&gt;

&lt;p&gt;提供分类标签，可以快速找到想要的内容。&lt;/p&gt;

&lt;p&gt;网址：&lt;a href=&quot;https://www.pexels.com/&quot;&gt;https://www.pexels.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;magdeleine&quot;&gt;Magdeleine&lt;/h3&gt;

&lt;p&gt;不是全部内容免版权，所以要注意一下。&lt;/p&gt;

&lt;p&gt;照片支持标签和主色调搜索。&lt;/p&gt;

&lt;p&gt;网站：https://magdeleine.co/browse/&lt;/p&gt;

&lt;h3 id=&quot;picjumbo&quot;&gt;Picjumbo&lt;/h3&gt;

&lt;p&gt;有免费图和付费会员两种类型（最便宜的blogger是$10/month）&lt;/p&gt;

&lt;p&gt;网址：https://picjumbo.com/&lt;/p&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="资源" /><category term="有趣" /><category term="摄影" /><summary type="html">图到用时方恨少，这里有一些高清公开版权的图片网站链接与介绍</summary></entry><entry><title type="html">有趣的链接收集</title><link href="http://localhost:4000/2019/07/06/interesting-resource.html" rel="alternate" type="text/html" title="有趣的链接收集" /><published>2019-07-06T00:00:00+00:00</published><updated>2019-07-06T00:00:00+00:00</updated><id>http://localhost:4000/2019/07/06/interesting-resource</id><content type="html" xml:base="http://localhost:4000/2019/07/06/interesting-resource.html">&lt;p&gt;这是一些比较有意思的资源整理&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;纯粹好玩&quot;&gt;纯粹好玩&lt;/h2&gt;

&lt;h3 id=&quot;silk--interactive-generative-art&quot;&gt;&lt;a href=&quot;http://weavesilk.com/&quot;&gt;Silk – Interactive Generative Art&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;网页端的图像生成器&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://klr-picgo.oss-cn-beijing.aliyuncs.com/img/silk.PNG&quot; alt=&quot;图片&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;make-your-own-mandelbrot&quot;&gt;&lt;a href=&quot;http://www.allitebooks.in/make-your-own-mandelbrot/&quot;&gt;Make Your Own Mandelbrot&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;如何制作分形图案，附带ipython的代码笔记&lt;/p&gt;

&lt;p&gt;https://github.com/makeyourownmandelbrot/makeyourownmandelbrot&lt;/p&gt;</content><author><name>孔令仁</name><email>2018201661@ruc.edu.cn</email></author><category term="资源" /><category term="有趣" /><summary type="html">这是一些比较有意思的资源整理</summary></entry></feed>